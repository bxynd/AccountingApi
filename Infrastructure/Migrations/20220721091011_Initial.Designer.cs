// <auto-generated />
using System;
using Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220721091011_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.6.22329.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.ExpenseIncome", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TurnoverType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ExpensesIncomes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d83da0a5-0e14-4e66-bdcb-d6391048f407"),
                            Name = "Salary",
                            TurnoverType = 1
                        },
                        new
                        {
                            Id = new Guid("9d4b8996-1c79-4a5c-a09b-7a973e6fca80"),
                            Name = "Real estate rent",
                            TurnoverType = 1
                        },
                        new
                        {
                            Id = new Guid("193554b0-d180-4b95-8a38-10c0f9725036"),
                            Name = "Other",
                            TurnoverType = 1
                        },
                        new
                        {
                            Id = new Guid("7f4585b2-0a82-4f3b-bd96-37ce4c63e621"),
                            Name = "Food",
                            TurnoverType = 0
                        },
                        new
                        {
                            Id = new Guid("0bfcfc88-bb72-498d-b2de-8592497ad7c8"),
                            Name = "Transportation",
                            TurnoverType = 0
                        },
                        new
                        {
                            Id = new Guid("dd501e53-60ce-471e-b10f-9b9c596e6144"),
                            Name = "Mobile connection",
                            TurnoverType = 0
                        },
                        new
                        {
                            Id = new Guid("705ba70e-cf28-455d-8c9e-743384b3692c"),
                            Name = "Internet",
                            TurnoverType = 0
                        },
                        new
                        {
                            Id = new Guid("b0c8d995-6251-434d-abb0-901bfa254b15"),
                            Name = "Entertainment",
                            TurnoverType = 0
                        },
                        new
                        {
                            Id = new Guid("7653978a-0820-4cf8-a10c-52ee85524b17"),
                            Name = "Other",
                            TurnoverType = 0
                        });
                });

            modelBuilder.Entity("Domain.Models.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ExpenseIncomeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseIncomeId");

                    b.HasIndex("UserId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Models.Record", b =>
                {
                    b.HasOne("Domain.Models.ExpenseIncome", "ExpenseIncome")
                        .WithMany("Records")
                        .HasForeignKey("ExpenseIncomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("Records")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpenseIncome");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.ExpenseIncome", b =>
                {
                    b.Navigation("Records");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Navigation("Records");
                });
#pragma warning restore 612, 618
        }
    }
}
